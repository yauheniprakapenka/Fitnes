//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class RestTrainingSection: APIModel {

    public var sectionType: String

    public var startMinute: Double

    public var duration: Double

    public var sectionName: String?

    public init(sectionType: String, startMinute: Double, duration: Double, sectionName: String? = nil) {
        self.sectionType = sectionType
        self.startMinute = startMinute
        self.duration = duration
        self.sectionName = sectionName
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        sectionType = try container.decode("section_type")
        startMinute = try container.decode("start_minute")
        duration = try container.decode("duration")
        sectionName = try container.decodeIfPresent("section_name")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encode(sectionType, forKey: "section_type")
        try container.encode(startMinute, forKey: "start_minute")
        try container.encode(duration, forKey: "duration")
        try container.encodeIfPresent(sectionName, forKey: "section_name")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? RestTrainingSection else { return false }
      guard self.sectionType == object.sectionType else { return false }
      guard self.startMinute == object.startMinute else { return false }
      guard self.duration == object.duration else { return false }
      guard self.sectionName == object.sectionName else { return false }
      return true
    }

    public static func == (lhs: RestTrainingSection, rhs: RestTrainingSection) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
