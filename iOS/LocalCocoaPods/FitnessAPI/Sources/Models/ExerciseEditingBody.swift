//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** Json body to use when update(put) exercise. Required at most one parameter to edit */
public class ExerciseEditingBody: APIModel {

    public var description: String?

    public var equipment: String?

    public var name: String?

    public var videoUrl: String?

    public init(description: String? = nil, equipment: String? = nil, name: String? = nil, videoUrl: String? = nil) {
        self.description = description
        self.equipment = equipment
        self.name = name
        self.videoUrl = videoUrl
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        description = try container.decodeIfPresent("description")
        equipment = try container.decodeIfPresent("equipment")
        name = try container.decodeIfPresent("name")
        videoUrl = try container.decodeIfPresent("videoUrl")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(description, forKey: "description")
        try container.encodeIfPresent(equipment, forKey: "equipment")
        try container.encodeIfPresent(name, forKey: "name")
        try container.encodeIfPresent(videoUrl, forKey: "videoUrl")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? ExerciseEditingBody else { return false }
      guard self.description == object.description else { return false }
      guard self.equipment == object.equipment else { return false }
      guard self.name == object.name else { return false }
      guard self.videoUrl == object.videoUrl else { return false }
      return true
    }

    public static func == (lhs: ExerciseEditingBody, rhs: ExerciseEditingBody) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
