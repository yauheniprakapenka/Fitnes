//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class UserPusInfoResponse: APIModel {

    public var id: Int

    public var email: String

    public var firstName: String

    public var lastName: String

    public var phone: String?

    public init(id: Int, email: String, firstName: String, lastName: String, phone: String?) {
        self.id = id
        self.email = email
        self.firstName = firstName
        self.lastName = lastName
        self.phone = phone
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        id = try container.decode("id")
        email = try container.decode("email")
        firstName = try container.decode("first_name")
        lastName = try container.decode("last_name")
        phone = try container.decodeIfPresent("phone")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encode(id, forKey: "id")
        try container.encode(email, forKey: "email")
        try container.encode(firstName, forKey: "first_name")
        try container.encode(lastName, forKey: "last_name")
        try container.encodeIfPresent(phone, forKey: "phone")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? UserPusInfoResponse else { return false }
      guard self.id == object.id else { return false }
      guard self.email == object.email else { return false }
      guard self.firstName == object.firstName else { return false }
      guard self.lastName == object.lastName else { return false }
      guard self.phone == object.phone else { return false }
      return true
    }

    public static func == (lhs: UserPusInfoResponse, rhs: UserPusInfoResponse) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
